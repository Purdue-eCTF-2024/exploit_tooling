// This simulates an AP requesting a component's attestation data
// You MUST change the i2c_id below for this to work (last byte of component id)
// Assumes the command structure and security of the insecure example

#include <Wire.h>

const int ledPin = 13;
const int i2c_id = 0; // CHANGE ME

void setup() {
  Serial.begin(9600);
  pinMode(ledPin, OUTPUT);

  Wire.begin();
  Wire.setClock(100000);

  delay(1000);

  Wire.beginTransmission(i2c_id);
  Wire.write(0x2);
  Wire.write(0x1);
  Wire.endTransmission();

  Wire.beginTransmission(i2c_id);
  Wire.write(0x0);
  Wire.write(0x4); // This is the command opcode
  Wire.endTransmission();

  Wire.beginTransmission(i2c_id);
  Wire.write(0x1);
  Wire.write(0x1);
  Wire.endTransmission();

  Wire.beginTransmission(i2c_id);
  Wire.write(0x4);
  Wire.endTransmission();

  Wire.requestFrom(i2c_id, 1);
  while (Wire.available()) {
    char receivedByte = Wire.read();
    Serial.print(receivedByte, HEX);
    Serial.print("\n");
  }

  Wire.beginTransmission(i2c_id);
  Wire.write(0x5);
  Wire.endTransmission();

  Wire.requestFrom(i2c_id, 1);
  char receivedByte;
  while (Wire.available()) {
    receivedByte = Wire.read();
    Serial.print(receivedByte, HEX);
    Serial.print("\n");
  }
  
  Wire.beginTransmission(i2c_id);
  Wire.write(0x3);
  Wire.endTransmission();

  Wire.requestFrom(i2c_id, receivedByte);
  while (Wire.available()) {
    char receivedByte = Wire.read();
    Serial.write(receivedByte);
  }
}

void loop() {
}

void flashLED() {
  digitalWrite(ledPin, HIGH);
  delay(500);
  digitalWrite(ledPin, LOW);
}
